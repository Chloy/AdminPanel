# Generated by Django 3.2.12 on 2022-03-09 06:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ASSIGNIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.assignip')),
            ],
            options={
                'verbose_name_plural': 'ASSIGNIP',
            },
        ),
        migrations.CreateModel(
            name='AVAILABILITY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.availability')),
            ],
            options={
                'verbose_name_plural': 'AVAILABILITY',
            },
        ),
        migrations.CreateModel(
            name='BE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.be')),
            ],
            options={
                'verbose_name_plural': 'BE',
            },
        ),
        migrations.CreateModel(
            name='CLASS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.class')),
            ],
            options={
                'verbose_name_plural': 'CLASS',
            },
        ),
        migrations.CreateModel(
            name='CON',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.con')),
            ],
            options={
                'verbose_name_plural': 'CON',
            },
        ),
        migrations.CreateModel(
            name='DINET',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.dinet')),
            ],
            options={
                'verbose_name_plural': 'DINET',
            },
        ),
        migrations.CreateModel(
            name='ELK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.elk')),
            ],
            options={
                'verbose_name_plural': 'ELK',
            },
        ),
        migrations.CreateModel(
            name='FAMILY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.family')),
            ],
            options={
                'verbose_name_plural': 'FAMILY',
            },
        ),
        migrations.CreateModel(
            name='FEATURE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.feature')),
            ],
            options={
                'verbose_name_plural': 'FEATURE',
            },
        ),
        migrations.CreateModel(
            name='Var',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=250, null=True)),
                ('json_value', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Var',
            },
        ),
        migrations.CreateModel(
            name='VarType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Var type',
            },
        ),
        migrations.CreateModel(
            name='WU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.wu')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'WU',
            },
        ),
        migrations.AddField(
            model_name='var',
            name='var_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ansible_admin_panel.vartype'),
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.tv')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'TV',
            },
        ),
        migrations.CreateModel(
            name='STAGE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.stage')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'STAGE',
            },
        ),
        migrations.CreateModel(
            name='SSH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.ssh')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'SSH',
            },
        ),
        migrations.CreateModel(
            name='ROLE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.role')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'ROLE',
            },
        ),
        migrations.CreateModel(
            name='ORG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.org')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'ORG',
            },
        ),
        migrations.CreateModel(
            name='LOCATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.location')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'LOCATION',
            },
        ),
        migrations.CreateModel(
            name='LOCAL_OS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.local_os')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'LOCAL OS',
            },
        ),
        migrations.CreateModel(
            name='KNA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.kna')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'KNA',
            },
        ),
        migrations.CreateModel(
            name='KES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.kes')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'KES',
            },
        ),
        migrations.CreateModel(
            name='HV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ansible_admin_panel.hv')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
            ],
            options={
                'verbose_name_plural': 'HV',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('EQ', models.IntegerField(unique=True)),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.class')),
                ('assignip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.assignip')),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.availability')),
                ('be', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.be')),
                ('con', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.con')),
                ('dinet', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.dinet')),
                ('elk', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.elk')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.family')),
                ('features', models.ManyToManyField(blank=True, to='ansible_admin_panel.FEATURE')),
                ('hv', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.hv')),
                ('kes', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.kes')),
                ('kna', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.kna')),
                ('local_os', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.local_os')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.location')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.org')),
                ('roles', models.ManyToManyField(blank=True, to='ansible_admin_panel.ROLE')),
                ('ssh', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.ssh')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.stage')),
                ('tv', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.tv')),
                ('vars', models.ManyToManyField(blank=True, to='ansible_admin_panel.Var')),
                ('wu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ansible_admin_panel.wu')),
            ],
            options={
                'verbose_name_plural': 'Host',
            },
        ),
        migrations.AddField(
            model_name='feature',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='family',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='elk',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='dinet',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='con',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='class',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='be',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='availability',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
        migrations.AddField(
            model_name='assignip',
            name='vars',
            field=models.ManyToManyField(blank=True, to='ansible_admin_panel.Var'),
        ),
    ]
